buildscript {
	repositories {
		mavenCentral()
		maven { url = "https://maven.minecraftforge.net/" }
		maven { url = 'https://maven.cleanroommc.com' }
	}
	
	dependencies {
		classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.77"
	}
}

apply plugin: "java"
apply plugin: "net.minecraftforge.gradle"

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
compileJava {
	sourceCompatibility = "8"
	targetCompatibility = "8"
}

repositories {
	maven {
		url = "https://maven.minecraftforge.net/"
	}

	maven { url = 'https://maven.cleanroommc.com' }
}

dependencies {
	minecraft "net.minecraftforge:forge:1.12.2-14.23.5.2860"

	annotationProcessor 'org.ow2.asm:asm-debug-all:5.2'
	annotationProcessor 'com.google.guava:guava:32.1.2-jre'
	annotationProcessor 'com.google.code.gson:gson:2.8.9'

	implementation("io.hotmoka:toml4j:0.7.3")

	implementation("org.joml:joml:1.10.5")

	implementation ('zone.rong:mixinbooter:10.4') {
		transitive = false
	}
	annotationProcessor ('zone.rong:mixinbooter:10.4') {
		transitive = false
	}
}

minecraft {
	mappings channel: "stable", version: "39-1.12"

	runs {
		client {
			workingDirectory file("./run")
			mods { "${project.name}" { source sourceSets.main } }
		}
		server {
			workingDirectory file("./run/server")
			mods { "${project.name}" { source sourceSets.main } }
		}
	}
}

processResources {
	inputs.property "version", project.version
	
	filesMatching("mcmod.info") {
		expand "version": project.version
	}
}

compileJava {
	options.compilerArgs += [
			'-Xlint:-processing',
			'-AoutRefMapFile=cameraoverhaul.refmap.json', // Must match mixin.json's "refmap"
			'-AoutSrgFile=output.srg'
	]
}

jar {
	manifest {
		attributes([
				"FMLCorePluginContainsFMLMod": "true",
				"ForceLoadAsMod": "true",
				"TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
				"MixinConfigs": "cameraoverhaul.mixins.json"
		])
	}
}


configurations {
	annotationProcessor.extendsFrom minecraftAnnotationProcessor
}

//When Forge 1.12 loads mods from a directory that's been put on the classpath, it expects to find resources in the same directory.
//Default Gradle behavior puts resources in ./build/resources/main instead of ./build/classes/main/java. Let's change that.
afterEvaluate {
	// Merge resources into classes directory
	sourceSets.main.output.resourcesDir = file("${buildDir}/classes/java/main")
	tasks.named('processResources') {
		destinationDir = file("${buildDir}/classes/java/main")
	}
}